"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3177],{6052:(n,a,s)=>{s.r(a),s.d(a,{data:()=>e});const e={key:"v-6815a7dd",path:"/dev/laravel/09%20Storage%20et%20Files.html",title:"Laravel : Storage and Files",lang:"fr-FR",frontmatter:{},excerpt:"",headers:[{level:2,title:"Description",slug:"description",children:[]}],filePathRelative:"dev/laravel/09 Storage et Files.md",git:{updatedTime:1627849147e3,contributors:[{name:"kratos",email:"desmond8500@gmail.com",commits:1}]}}},9888:(n,a,s)=>{s.r(a),s.d(a,{default:()=>t});const e=(0,s(6252).uE)('<h1 id="laravel-storage-and-files" tabindex="-1"><a class="header-anchor" href="#laravel-storage-and-files" aria-hidden="true">#</a> Laravel : Storage and Files</h1><h2 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> Description</h2><p>Les objets <strong>Storage</strong> et <strong>File</strong> permettent de gérer facilement le traitement et le stockage de fichiers avec laravel.</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token comment">// Require</span>\n<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Facades<span class="token punctuation">\\</span>Storage</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Facades<span class="token punctuation">\\</span>File</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Function</span>\n<span class="token variable">$cover</span> <span class="token operator">=</span> <span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">file</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;image&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">$image</span> <span class="token operator">=</span> <span class="token variable">$cover</span><span class="token operator">-&gt;</span><span class="token function">getClientOriginalName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">$dir</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;chemin/<span class="token interpolation"><span class="token variable">$image</span></span>&quot;</span><span class="token punctuation">;</span>\n<span class="token class-name static-context">Storage</span><span class="token operator">::</span><span class="token function">disk</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;public&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">,</span>  <span class="token class-name static-context">File</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$cover</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>Pour récupérer le nom du fichier il faut utiliser la fonction suivante :</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$cover</span><span class="token operator">-&gt;</span><span class="token function">getClientOriginalName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Pour récupérer le nom qui a été généré :</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$cover</span><span class="token operator">-&gt;</span><span class="token function">getFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',8),t={render:function(n,a){return e}}}}]);