"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9600],{7468:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-06ab1174",path:"/dev/livewire/card_model.html",title:"Modèle de carte",lang:"fr-FR",frontmatter:{},excerpt:"",headers:[],filePathRelative:"dev/livewire/card_model.md",git:{updatedTime:1635233806e3,contributors:[{name:"kratos",email:"desmond8500@gmail.com",commits:1}]}}},9499:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<h1 id="modele-de-carte" tabindex="-1"><a class="header-anchor" href="#modele-de-carte" aria-hidden="true">#</a> Modèle de carte</h1><p>Créer le composant livewire.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>php artisan make:livewire card_name\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Personnaliser le composant</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">WithPagination</span><span class="token punctuation">;</span>\n<span class="token keyword">protected</span> <span class="token variable">$paginationTheme</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;bootstrap&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">public</span> <span class="token variable">$search</span><span class="token punctuation">;</span>\n<span class="token keyword">public</span> <span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$description</span><span class="token punctuation">,</span> <span class="token variable">$instance_id</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">store</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token class-name static-context">Model</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n        <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">name</span><span class="token punctuation">,</span>\n        <span class="token string single-quoted-string">&#39;description&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">description</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    \n    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;description&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">edit</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">instance_id</span> <span class="token operator">=</span> <span class="token variable">$id</span><span class="token punctuation">;</span>\n    <span class="token variable">$instance</span> <span class="token operator">=</span> <span class="token class-name static-context">Model</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">name</span> <span class="token operator">=</span> <span class="token variable">$instance</span><span class="token operator">-&gt;</span><span class="token property">name</span><span class="token punctuation">;</span>\n    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">description</span> <span class="token operator">=</span> <span class="token variable">$instance</span><span class="token operator">-&gt;</span><span class="token property">description</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token variable">$instance</span> <span class="token operator">=</span> <span class="token class-name static-context">Model</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">instance_id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token variable">$instance</span><span class="token operator">-&gt;</span><span class="token property">name</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">name</span><span class="token punctuation">;</span>\n    <span class="token variable">$instance</span><span class="token operator">-&gt;</span><span class="token property">description</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">description</span><span class="token punctuation">;</span>\n\n    <span class="token variable">$instance</span><span class="token operator">-&gt;</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    \n    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;instance_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token variable">$instance</span> <span class="token operator">=</span> <span class="token class-name static-context">Model</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">instance_id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token variable">$instance</span><span class="token operator">-&gt;</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><p>Créer le modèle avec sa migration.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>php artisan make:model CardModel -m\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Personnaliser le modèle</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Softdeletes</span><span class="token punctuation">;</span>\n\n<span class="token keyword">protected</span> <span class="token variable">$fillable</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;description&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Personnaliser la migration</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token keyword type-declaration">string</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;description&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">softdeletes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',11),e={render:function(n,s){return p}}}}]);