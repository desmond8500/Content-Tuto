"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5846],{9533:(n,s,e)=>{e.r(s),e.d(s,{data:()=>a});const a={key:"v-7c0e3648",path:"/dev/php/expressions.html",title:"Expressions régulières",lang:"fr-FR",frontmatter:{},excerpt:"",headers:[{level:2,title:"Condition",slug:"condition",children:[{level:3,title:"Test conditionel",slug:"test-conditionel",children:[]},{level:3,title:"Test opérateur ternaire",slug:"test-operateur-ternaire",children:[]}]}],filePathRelative:"dev/php/expressions.md",git:{updatedTime:1628274836e3,contributors:[{name:"kratos",email:"desmond8500@gmail.com",commits:2}]}}},3333:(n,s,e)=>{e.r(s),e.d(s,{default:()=>t});const a=(0,e(6252).uE)('<h1 id="expressions-regulieres" tabindex="-1"><a class="header-anchor" href="#expressions-regulieres" aria-hidden="true">#</a> Expressions régulières</h1><h2 id="condition" tabindex="-1"><a class="header-anchor" href="#condition" aria-hidden="true">#</a> Condition</h2><h3 id="test-conditionel" tabindex="-1"><a class="header-anchor" href="#test-conditionel" aria-hidden="true">#</a> Test conditionel</h3><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">echo</span> hello<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$name</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;username&#39;</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token string single-quoted-string">&#39;salut&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="test-operateur-ternaire" tabindex="-1"><a class="header-anchor" href="#test-operateur-ternaire" aria-hidden="true">#</a> Test opérateur ternaire</h3><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token punctuation">(</span>condition<span class="token punctuation">)</span> <span class="token operator">?</span> instruction si vrai <span class="token punctuation">:</span> instruction si faux\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',7),t={render:function(n,s){return a}}}}]);